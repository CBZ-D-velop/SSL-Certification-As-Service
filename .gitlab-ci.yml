# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- gitlab-test
- yaml-lint
- ansible-lint
- build_testing

variables:
  PIPELINE_SCENARIO_NAME: "gitlabci"

###############################################################################
#################### actions
###############################################################################

# To start, we need to lint role's files with a YML vision
# Because if one of the files doesn't respect YML conventions,
# we dont need to test rest of the pipeline
.yaml_lint: &yaml_lint
  stage: yaml-lint
  image: $NEXUS_ADDRESS/$DOCKER_IMAGE_YAML_LINT
  before_script:
    # Fix weird ansible bug: https://github.com/trailofbits/algo/issues/1637
    # This probably happens due to gitlab-runner mounting the git repo into the container
    - "chmod o-w ."
  script:
    - yamllint -c ./.yamllint $path # Here mains files
  allow_failure: false
  retry: 2

.ansible_lint: &ansible_lint
  stage: ansible-lint
  image: $NEXUS_ADDRESS/$DOCKER_IMAGE_ANSIBLE_LINT
  before_script:
    # Fix weird ansible bug: https://github.com/trailofbits/algo/issues/1637
    # This probably happens due to gitlab-runner mounting the git repo into the container
    - "chmod o-w ."
  script:
    - ansible-lint --config=./.ansible-lint --exclude molecule --exclude tests ./*
  allow_failure: false
  retry: 2

# We will build and run each tools with the input.yml file
.build_and_test: &build_and_test
  stage: build_testing
  image: $NEXUS_ADDRESS/$DOCKER_IMAGE_DEBIAN_11_ANSIBLE
  script:
    - ./build
    - cd $path
    - ./$binary
  allow_failure: false
  retry: 2

###############################################################################
#################### CI JOBS
###############################################################################

############################################
#### gitlab-test
############################################

# As a GitLab ci, we use the default template :)
sast:
  stage: gitlab-test
include:
- template: Security/SAST.gitlab-ci.yml
  allow_failure: false

############################################
#### lint
############################################

yml_lint_input:
  <<: *yaml_lint
  variables:
    path: "./bin/input.yml"

############################################
#### ansible-lint
############################################

ansible_lint:
  <<: *ansible_lint
  needs:
    - "yml_lint_input"

#############################################
##### build and test
#############################################

build_bootstrap_ssl_files:
  <<: *build_and_test
  variables:
    path: "./bin"
    binary: "certifications"
  needs:
    - "ansible_lint"